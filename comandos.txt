//criando projeto
dotnet new webapi - o nomeProjeto

dotnet add package Flunt -v 2.0.5
dotnet add package Microsoft.EntityFrameworkCore -v 7.0.2
dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore -v 6.0.13
--dotnet add package Microsoft.AspNetCore.Mvc.Versioning -v 5.1.0 (se usando dotnet 6)
--dotnet add package Asp.Versioning.Mvc -v 6.0.0 (se usando dotnet 8)
dotnet add package Evolve -v 3.2.0
dotnet add package Serilog -v 3.1.1
dotnet add package Serilog.AspNetCore -v 7.0.0
dotnet add package Serilog.Sinks.Console -v 5.0.1
dotnet add package Serilog.Sinks.MySQL -v 4.6.0
dotnet add package Pomelo.EntityFrameworkCore.MySql --version 7.0.0

//*processos sessão 16(Hateoas)*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-criada pasta Hypermedia (onde ficam as coisas relacionadas as HATEOAS)
--criada subpasta Abstract
---ali criada uma interface chamada IResponseEnricher
---ali criada uma interface chamada ISupporstHypermedia
--criada subpasta Constants
---criada uma classe chamada HttpActionVerb
---criada uma classe chamada RelationType
---criada uma classe chamada ResponseTypeFormat
--criada subpasta Filters (com classes responsaveis para realizar a inclusão nos links nas responses)
---criada uma classe chamada HyperMediaFilterOptions
---criada uma classe chamada HyperMediaFilter
--dentro de Hypermedia, criada nova classe, chamada HyperMediaLink
--dentro de Hypermedia, criada nova classe, chamada ContentResponseEnricher

-realizado ajuste em PersonVO para suporte a ISupporstHypermedia.

-volta para pasta Hypermedia
--criada subpasta Enricher
---então é necessário adicionar um enricher para cada classe que irá usuar Hypermedia
---criada classe PersonEnricher

-realizado ajuste em Program.cs para ajustar as injeções de dependencia (observações com '//! injetando dependencias para uso de HATEOAS')

-realizado ajuste em PersonController, adicionando [TypeFilter(typeof(HyperMediaFilter))] abaixo de cada anotação http, exceto DELETE

//*processos sessão 19(Autenticação)*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
dotnet add package Microsoft.AspNetCore.Authentication.JwtBearer -v 6.0.25
-Na pasta db, criados dois arquivos para a Migration da tabale user e primeira carga
-Na pasta Model, criada a classe User (para uso do acesso em si, login e senha)
-Adicionada no DBContext a tabela User
-Criada uma Repository especifica para o tratamento de User (IUserRepository e UserRepository)
--Criada UserVO para trafego das informações pelo endopoint
-Criada uma pasta na raiz, com nome de Configurations para parametrizar o token
--Criada classe tokenConfiguration
--adicionado em appsettings os parametros TokenConfiguration
-Criada uma pasta Crypto em Services para criar classes referentes ao token
--criada interface ITokenService
--criada classe TokenService com as implementações
-Em Data/VO, criada a classe TokenVO para usar no trafego do token
-Em Services/Business criada a classe e interface para regras de autenticação (ILogin e Login)
-Então em Program adicionado as dependencias de login
-Criado em Controllers a classe AuthController para controle da criação e atualização do token (deixando a anotação para uso dela sem autenticação)

//query param
-Adicionada chamada findPersonByName na classe PersonBusines, PersonRepository e nao Controler.
-No controller então é usado por queryParam o recebimento das informações (que por sua vez são opcionais, e devem ser tratadas dessa forma)

/*por conta*/
criada classe Claims
ajustado em db context a validação dela e criação da chave (principalmente para uso de migrations)
adicionados comandos para criação da tabela e primeira carga para migration manual
-adicionada função em UserRepository para buscar as Claims do usuário